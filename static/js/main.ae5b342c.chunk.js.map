{"version":3,"sources":["helpers/convertNumberToRoman.js","helpers/toDashCase.js","constants/draggableTypes.js","assets/delete.svg","components/pages/main/ListItem.jsx","components/pages/main/FavoritesList.jsx","assets/yoda.png","assets/darth_vader.svg","components/shared/Loader.jsx","components/pages/main/Filters.jsx","components/pages/main/NamesList.jsx","components/pages/main/index.jsx","components/pages/character-page/index.jsx","App.js","index.js"],"names":["romanMatrix","convertNumberToRoman","number","toDashCase","str","match","map","x","toLowerCase","join","DraggableTypes","LIST_ITEM","ItemContainer","styled","div","isFavorite","NameText","p","StyledLink","Link","DeleteIconContainer","ListItem","name","url","id","onDelete","useDrag","type","item","collect","monitor","isDragging","drag","to","ref","onClick","event","preventDefault","stopPropagation","src","DeleteIcon","alt","Container","isOver","Title","h4","Favorites","useState","favoriteCharacters","setFavouriteCharacters","handleDrop","useCallback","state","some","el","localStorage","setItem","JSON","stringify","useDrop","accept","drop","itemDeleteHandler","newFavorites","filter","useEffect","persistedFavorites","getItem","isNil","parse","isEmpty","LoaderContainer","Loader","DarthVaderIcon","DEFAULT_YEARS_RANGE","ResetButton","FilterContainer","FilterName","span","SwitchLogicContainer","YearsContainer","YearIndicator","SelectsContainer","Divider","Filters","species","films","allPeople","setPeopleToDisplay","isAndRelationship","setIsAndRelationship","film","specie","yearsRange","filters","setFilters","resetFiltersHandler","filterItems","person","key","minYear","maxYear","birthYear","filterValue","value","includes","filterCharachters","activeFilters","Object","keys","filteredPeople","every","selectStyles","useMemo","control","provided","backgroundColor","outline","border","boxShadow","singleValue","color","fontFamily","fontSize","menu","menuList","paddingTop","paddingBottom","option","isSelected","padding","isFocused","isDisabled","options","defaultValue","isSearchable","onChange","styles","min","max","step","reverse","trackStyle","handleStyle","checked","offColor","onColor","isAllDataFetched","ScrollToTopButton","button","NothingFoundMessage","YodaImage","img","NothingFoundMessageContainer","NamesList","useContext","DataContext","people","peopleToDisplay","listRef","useRef","handleScrollToTop","current","scrollTo","top","behavior","index","length","Yoda","Main","isDataFetched","Name","h2","CharacterInfoTitle","CharacterInfoDecription","CharacterPage","useParams","charactersData","setCharactersData","fetchCharacterData","a","find","character","starships","axios","all","get","charactersFilmsData","charactersSpeciesData","charactersStarshipsData","charactersFilmNames","flatMap","data","episode_id","title","charactersSpeciesNames","charactersStarshipsNames","starship","SWAPI_BASE_URL","React","createContext","AppContainer","App","setPeople","setSpecies","setFilms","getPeople","urls","Array","fill","_","results","peopleData","birth_year","parseInt","getFilms","filmsData","label","getSpecies","speciesData","Provider","DndProvider","backend","HTML5Backend","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae5b342c.chunk.js","sourcesContent":["const romanMatrix = {\n  1: 'I',\n  2: 'II',\n  3: 'III',\n  4: 'IV',\n  5: 'V',\n  6: 'VI',\n};\n\nconst convertNumberToRoman = (number) => {\n  return romanMatrix[number];\n};\n\nexport default convertNumberToRoman;\n","const toDashCase = (str) =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n\nexport default toDashCase;\n","const DraggableTypes = {\n  LIST_ITEM: 'list-item',\n};\n\nexport default DraggableTypes;\n","export default __webpack_public_path__ + \"static/media/delete.eda9e0ab.svg\";","import React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport DraggableTypes from 'constants/draggableTypes';\nimport DeleteIcon from 'assets/delete.svg';\n\nconst ListItem = ({ name, url, id, isFavorite, onDelete }) => {\n  const [, drag] = useDrag(() => ({\n    type: DraggableTypes.LIST_ITEM,\n    item: { name, url, id },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  return (\n    <StyledLink to={`/person/${id}`}>\n      <ItemContainer ref={drag} isFavorite={isFavorite}>\n        <NameText isFavorite={isFavorite}>{name}</NameText>\n        {isFavorite && (\n          <DeleteIconContainer\n            onClick={(event) => {\n              event.preventDefault();\n              event.stopPropagation();\n              onDelete(id);\n            }}\n          >\n            <img src={DeleteIcon} alt=\"delete icon\" />\n          </DeleteIconContainer>\n        )}\n      </ItemContainer>\n    </StyledLink>\n  );\n};\n\nconst ItemContainer = styled.div`\n  height: 80px;\n  width: 100%;\n  position: relative;\n  margin-bottom: 15px;\n  padding: 15px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border: 0.5px dotted\n    ${({ isFavorite }) => (isFavorite ? '#7ab6fc70' : '#ffe81f70')};\n\n  font-family: 'SfDistantGalaxy-Italic';\n\n  transition: all 0.3s;\n\n  &: hover {\n    cursor: pointer;\n    background-color: #ffffff05;\n    font-family: 'SfDistantGalaxy';\n  }\n`;\n\nconst NameText = styled.p`\n  font-size: 24px;\n  text-transform: uppercase;\n  color: ${({ isFavorite }) => (isFavorite ? '#7ab6fc' : '#ffe81f')};\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nconst DeleteIconContainer = styled.div`\n  position: absolute;\n  right: 20px;\n`;\n\nexport default ListItem;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { isEmpty, isNil } from 'ramda';\nimport { useDrop } from 'react-dnd';\nimport styled from 'styled-components';\n\nimport DraggableTypes from 'constants/draggableTypes';\n\nimport ListItem from './ListItem';\n\nconst Favorites = () => {\n  const [favoriteCharacters, setFavouriteCharacters] = useState([]);\n\n  const handleDrop = useCallback((item) => {\n    setFavouriteCharacters((state) => {\n      const isItemAlreadyExists = state.some((el) => el.name === item.name);\n\n      if (isItemAlreadyExists) {\n        return state;\n      }\n\n      localStorage.setItem('favorites', JSON.stringify([...state, item]));\n      return [...state, item];\n    });\n  }, []);\n\n  const [{ isOver }, drop] = useDrop(\n    () => ({\n      accept: DraggableTypes.LIST_ITEM,\n      drop: (item) => handleDrop(item),\n      collect: (monitor) => ({\n        isOver: !!monitor.isOver(),\n      }),\n    }),\n    [],\n  );\n\n  const itemDeleteHandler = useCallback(\n    (id) => {\n      const newFavorites = favoriteCharacters.filter((el) => el.id !== id);\n\n      setFavouriteCharacters(newFavorites);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n    },\n    [favoriteCharacters],\n  );\n\n  useEffect(() => {\n    const persistedFavorites = localStorage.getItem('favorites');\n    if (!isNil(persistedFavorites)) {\n      setFavouriteCharacters(JSON.parse(persistedFavorites));\n    }\n  }, []);\n\n  return (\n    <Container ref={drop} isOver={isOver}>\n      <Title>Favorite Characters</Title>\n      {!isEmpty(favoriteCharacters) &&\n        favoriteCharacters.map((el) => (\n          <ListItem\n            name={el.name}\n            url={el.url}\n            key={`fav_${el.url}`}\n            id={el.id}\n            isFavorite\n            onDelete={itemDeleteHandler}\n          />\n        ))}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  height: 100vh;\n  flex: 1;\n  padding: 0px 30px 0px 30px;\n  background-color: #1f2329;\n  overflow: scroll;\n\n  border-left: ${({ isOver }) =>\n    !isOver ? '1px solid transparent' : '1px solid #7ab6fc'};\n  border-right: ${({ isOver }) =>\n    !isOver ? '1px solid transparent' : '1px solid #7ab6fc'};\n\n  transition: all 0.3s;\n`;\n\nconst Title = styled.h4`\n  font-family: 'Roboto';\n  font-weight: 200;\n`;\n\nexport default Favorites;\n","export default __webpack_public_path__ + \"static/media/yoda.c325c1d6.png\";","export default __webpack_public_path__ + \"static/media/darth_vader.064876ef.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport DarthVaderIcon from 'assets/darth_vader.svg';\n\nconst Loader = () => {\n  return (\n    <Container>\n      <LoaderContainer>\n        <img src={DarthVaderIcon} alt=\"darth wader loader\" />\n      </LoaderContainer>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst LoaderContainer = styled.div`\n  width: 64px;\n  height: 64px;\n\n  animation-name: spin;\n  animation-duration: 5000ms;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default Loader;\n","import React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport { isEmpty } from 'ramda';\nimport { Range } from 'rc-slider';\nimport Select from 'react-select';\nimport Switch from 'react-switch';\nimport styled from 'styled-components';\n\nconst DEFAULT_YEARS_RANGE = [8, 896];\n\nconst Filters = ({ species, films, allPeople, setPeopleToDisplay }) => {\n  const [isAndRelationship, setIsAndRelationship] = useState(true);\n  const [filters, setFilters] = useState({\n    film: films[0],\n    specie: species[0],\n    yearsRange: DEFAULT_YEARS_RANGE,\n  });\n\n  const resetFiltersHandler = useCallback(() => {\n    setFilters({\n      film: films[0],\n      specie: species[0],\n      yearsRange: DEFAULT_YEARS_RANGE,\n    });\n  }, [films, setFilters, species]);\n\n  const filterItems = useCallback(\n    (person, key) => {\n      if (key === 'yearsRange') {\n        const [minYear, maxYear] = filters[key];\n        const birthYear = person.birthYear;\n\n        return birthYear >= minYear && birthYear <= maxYear;\n      }\n\n      const filterValue = filters[key].value;\n\n      return person[key].includes(filterValue);\n    },\n    [filters],\n  );\n\n  const filterCharachters = useCallback(() => {\n    const activeFilters = Object.keys(filters).filter((key) => {\n      if (key === 'yearsRange') {\n        return (\n          filters[key][0] !== DEFAULT_YEARS_RANGE[0] ||\n          filters[key][1] !== DEFAULT_YEARS_RANGE[1]\n        );\n      }\n\n      return filters[key].value !== 'all';\n    });\n\n    if (isEmpty(activeFilters)) {\n      return setPeopleToDisplay(allPeople);\n    }\n\n    const filteredPeople = allPeople.filter((person) => {\n      if (isAndRelationship) {\n        return activeFilters.every((key) => filterItems(person, key));\n      }\n\n      return activeFilters.some((key) => filterItems(person, key));\n    });\n\n    setPeopleToDisplay(filteredPeople);\n  }, [filters, allPeople, setPeopleToDisplay, isAndRelationship, filterItems]);\n\n  const selectStyles = useMemo(\n    () => ({\n      control: (provided) => ({\n        ...provided,\n        backgroundColor: '#333',\n        outline: 'none',\n        border: 'none',\n        boxShadow: 'none',\n      }),\n\n      singleValue: (provided) => ({\n        ...provided,\n        color: '#fff',\n        fontFamily: 'Roboto',\n        fontSize: 16,\n      }),\n      menu: (provided, state) => ({\n        ...provided,\n      }),\n      menuList: (provided) => ({\n        ...provided,\n        paddingTop: 0,\n        paddingBottom: 0,\n      }),\n      option: (provided, state) => ({\n        ...provided,\n        color: state.isSelected ? '#333' : '#fff',\n        fontFamily: 'Roboto',\n        fontSize: 16,\n        padding: 20,\n        backgroundColor: state.isSelected\n          ? '#ffe81f'\n          : state.isFocused\n          ? '#33333380'\n          : '#333',\n        ':active': {\n          backgroundColor: !state.isDisabled && '#33333380',\n        },\n      }),\n    }),\n    [],\n  );\n\n  useEffect(() => {\n    filterCharachters();\n  }, [filterCharachters]);\n\n  return (\n    <Container>\n      <Title>Filter by</Title>\n      <SelectsContainer>\n        <FilterContainer>\n          <FilterName>Specie</FilterName>\n          <Select\n            value={filters.specie}\n            options={species}\n            defaultValue={species[0]}\n            isSearchable={true}\n            onChange={(value) =>\n              setFilters({\n                ...filters,\n                specie: value,\n              })\n            }\n            styles={selectStyles}\n          />\n        </FilterContainer>\n\n        <FilterContainer>\n          <FilterName>Film</FilterName>\n          <Select\n            value={filters.film}\n            options={films}\n            defaultValue={films[0]}\n            isSearchable={true}\n            onChange={(value) =>\n              setFilters({\n                ...filters,\n                film: value,\n              })\n            }\n            styles={selectStyles}\n          />\n        </FilterContainer>\n      </SelectsContainer>\n\n      <FilterContainer>\n        <FilterName>Birth Year</FilterName>\n        <Range\n          defaultValue={DEFAULT_YEARS_RANGE}\n          value={filters.yearsRange}\n          min={DEFAULT_YEARS_RANGE[0]}\n          max={DEFAULT_YEARS_RANGE[1]}\n          step={1}\n          reverse\n          onChange={(value) => {\n            setFilters({\n              ...filters,\n              yearsRange: value,\n            });\n          }}\n          trackStyle={[\n            {\n              backgroundColor: '#7ab6fc',\n            },\n          ]}\n          handleStyle={[\n            {\n              border: '2px solid #7ab6fc',\n            },\n            {\n              border: '2px solid #7ab6fc',\n            },\n          ]}\n        />\n        <YearsContainer>\n          <YearIndicator>{filters.yearsRange[1]} BBY</YearIndicator>\n          <YearIndicator>{filters.yearsRange[0]} BBY</YearIndicator>\n        </YearsContainer>\n      </FilterContainer>\n\n      <SwitchLogicContainer>\n        <FilterName>Results must match all the filters</FilterName>\n        <Switch\n          onChange={() => setIsAndRelationship((state) => !state)}\n          checked={isAndRelationship}\n          offColor=\"#7ab6fc\"\n          onColor=\"#ffe81f\"\n        />\n      </SwitchLogicContainer>\n\n      <ResetButton onClick={resetFiltersHandler}>Reset filters</ResetButton>\n      <Divider />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin-bottom: 60px;\n`;\n\nconst ResetButton = styled.div`\n  width: 140px;\n  height: 40px;\n  background-color: none;\n  cursor: pointer;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border: 1px solid #7ab6fc90;\n  border-radius: 6px;\n\n  color: #7ab6fc;\n  font-size: 18px;\n  font-family: 'Roboto';\n  font-weight: 100;\n\n  transition: all 0.3s;\n\n  &: hover {\n    background-color: #7ab6fc;\n    color: #fff;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  margin-bottom: 20px;\n  flex: 1;\n\n  &:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst Title = styled.h4`\n  font-family: 'Roboto';\n  font-weight: 100;\n`;\n\nconst FilterName = styled.span`\n  display: block;\n  margin-bottom: 16px;\n\n  font-family: 'Roboto';\n  font-weight: 100;\n  font-size: 20px;\n  color: #ffe81f;\n`;\n\nconst SwitchLogicContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-top: 40px;\n`;\n\nconst YearsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n`;\n\nconst YearIndicator = styled.span`\n  font-family: 'Roboto';\n  font-size: 16px;\n  font-weight: 300;\n`;\n\nconst SelectsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Divider = styled.div`\n  width: 100%;\n  margin-top: 30px;\n  height: 1px;\n  background-color: #999999;\n`;\n\nexport default Filters;\n","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useContext,\n  useMemo,\n} from 'react';\nimport styled from 'styled-components';\nimport { isEmpty } from 'ramda';\n\nimport { DataContext } from 'App';\nimport Yoda from 'assets/yoda.png';\nimport Loader from 'components/shared/Loader';\n\nimport Filters from './Filters';\nimport ListItem from './ListItem';\n\nconst NamesList = () => {\n  const { people, species, films } = useContext(DataContext);\n\n  const [peopleToDisplay, setPeopleToDisplay] = useState([]);\n\n  const listRef = useRef(null);\n\n  const handleScrollToTop = useCallback(\n    () => listRef.current.scrollTo({ top: 0, behavior: 'smooth' }),\n    [],\n  );\n\n  const isAllDataFetched = useMemo(\n    () => !isEmpty(people) && !isEmpty(species) && !isEmpty(films),\n    [films, people, species],\n  );\n\n  return (\n    <Container ref={listRef} isAllDataFetched={isAllDataFetched}>\n      {isAllDataFetched ? (\n        <>\n          <Filters\n            species={species}\n            films={films}\n            peopleToDisplay={peopleToDisplay}\n            allPeople={people}\n            setPeopleToDisplay={setPeopleToDisplay}\n          />\n\n          {peopleToDisplay.map((el, index) => (\n            <ListItem name={el.name} url={el.url} key={el.url} id={el.id} />\n          ))}\n\n          {peopleToDisplay.length > 10 && (\n            <ScrollToTopButton onClick={handleScrollToTop} type=\"button\">\n              Scroll to top ↑\n            </ScrollToTopButton>\n          )}\n\n          {peopleToDisplay.length === 0 && (\n            <NothingFoundMessageContainer>\n              <NothingFoundMessage>\n                Opps, no characters found... <br />\n                Try another filter parameters and may the force be with you!\n              </NothingFoundMessage>\n              <YodaImage src={Yoda} alt=\"yoda icon\" />\n            </NothingFoundMessageContainer>\n          )}\n        </>\n      ) : (\n        <Loader />\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 55%;\n  height: 100vh;\n  padding: 0px 50px 50px 50px;\n  margin-right: 40px;\n  background-color: #1f2329;\n  overflow: scroll;\n\n  display: flex;\n  flex-direction: column;\n\n  ${({ isAllDataFetched }) => !isAllDataFetched && 'justify-content: center'};\n`;\n\nconst ScrollToTopButton = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  font-family: 'SfDistantGalaxy';\n  font-size: 16px;\n  color: white;\n`;\n\nconst NothingFoundMessage = styled.p`\n  text-align: center;\n  font-family: 'Roboto';\n  font-size: 20px;\n`;\n\nconst YodaImage = styled.img`\n  width: 120px;\n`;\n\nconst NothingFoundMessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  width: 50%;\n`;\n\nexport default NamesList;\n","import React from 'react';\n\nimport Favorites from './FavoritesList';\nimport NamesList from './NamesList';\n\nconst Main = () => {\n  return (\n    <>\n      <NamesList />\n      <Favorites />\n    </>\n  );\n};\n\nexport default Main;\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { isEmpty, isNil } from 'ramda';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { DataContext } from 'App';\nimport Loader from 'components/shared/Loader';\nimport convertNumberToRoman from 'helpers/convertNumberToRoman';\n\nconst CharacterPage = () => {\n  let { id } = useParams();\n  const { people } = useContext(DataContext);\n\n  const [charactersData, setCharactersData] = useState(null);\n\n  const fetchCharacterData = useCallback(async () => {\n    const { name, specie, film, starships } = people.find(\n      (character) => character.id === id,\n    );\n\n    const charactersFilmsData = await axios.all(\n      film.map((url) => axios.get(url)),\n    );\n\n    const charactersSpeciesData = await axios.all(\n      specie.map((url) => axios.get(url)),\n    );\n\n    const charactersStarshipsData = await axios.all(\n      starships.map((url) => axios.get(url)),\n    );\n\n    const charactersFilmNames = charactersFilmsData\n      .flatMap((el) => el.data)\n      .map(\n        (film) =>\n          `Episode ${convertNumberToRoman(film.episode_id)}: ${film.title}`,\n      )\n      .join(', ');\n\n    const charactersSpeciesNames = charactersSpeciesData\n      .flatMap((el) => el.data)\n      .map((specie) => specie.name)\n      .join(', ');\n\n    const charactersStarshipsNames = charactersStarshipsData\n      .flatMap((el) => el.data)\n      .map((starship) => starship.name)\n      .join(', ');\n\n    setCharactersData({\n      name,\n      films: charactersFilmNames,\n      species: isEmpty(charactersSpeciesNames)\n        ? 'Unknown'\n        : charactersSpeciesNames,\n      starships: isEmpty(charactersStarshipsNames)\n        ? 'No starships'\n        : charactersStarshipsNames,\n    });\n  }, [id, people]);\n\n  useEffect(() => {\n    if (!isEmpty(people)) {\n      fetchCharacterData();\n    }\n  }, [fetchCharacterData, people]);\n\n  return (\n    <Container isDataFetched={!isNil(charactersData)}>\n      {!isNil(charactersData) ? (\n        <div>\n          <Name>{charactersData.name}</Name>\n          <CharacterInfoTitle>Species: </CharacterInfoTitle>\n          <CharacterInfoDecription>\n            {charactersData.species}\n          </CharacterInfoDecription>\n          <CharacterInfoTitle>Films: </CharacterInfoTitle>\n          <CharacterInfoDecription>\n            {charactersData.films}\n          </CharacterInfoDecription>\n          <CharacterInfoTitle>Starships:</CharacterInfoTitle>\n          <CharacterInfoDecription>\n            {charactersData.starships}\n          </CharacterInfoDecription>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 60%;\n  min-height: 500px;\n  margin: 0 auto;\n  padding: 50px;\n  display: flex;\n  justify-content: ${({ isDataFetched }) =>\n    isDataFetched ? 'flex-start' : 'center'};\n  background-color: #1f2329;\n\n  border-radius: 15px;\n`;\n\nconst Name = styled.h2`\n  font-family: 'SfDistantGalaxy';\n  color: #ffe81f;\n`;\n\nconst CharacterInfoTitle = styled.p`\n  font-family: 'SfDistantGalaxy-Italic';\n  font-size: 24px;\n  color: #ffe81f;\n`;\n\nconst CharacterInfoDecription = styled.p`\n  font-family: 'Roboto';\n  font-size: 20px;\n`;\n\nexport default CharacterPage;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { isEmpty } from 'ramda';\nimport styled from 'styled-components';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { Switch, Route } from 'react-router-dom';\n\nimport convertNumberToRoman from './helpers/convertNumberToRoman';\nimport toDashCase from './helpers/toDashCase';\nimport Main from './components/pages/main';\nimport CharacterPage from './components/pages/character-page';\n\nconst SWAPI_BASE_URL = 'https://swapi.dev/api/';\nconst TOTAL_PEOPLE_PAGES = 9;\nconst TOTAL_SPECIES_PAGES = 4;\n\nexport const DataContext = React.createContext({\n  people: [],\n  species: [],\n  films: [],\n});\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [species, setSpecies] = useState([]);\n  const [films, setFilms] = useState([]);\n\n  const getPeople = useCallback(async () => {\n    const urls = Array(TOTAL_PEOPLE_PAGES)\n      .fill(null)\n      .map((_, index) => `${SWAPI_BASE_URL}people/?page=${index + 1}`);\n\n    const results = await axios.all(urls.map((url) => axios.get(url)));\n\n    const peopleData = results\n      .flatMap((el) => el.data.results)\n      .map((el) => ({\n        name: el.name,\n        url: el.url,\n        birthYear:\n          el.birth_year === 'unknown' ? el.birth_year : parseInt(el.birth_year),\n        specie: el.species,\n        film: el.films,\n        starships: el.starships,\n        id: toDashCase(el.name),\n      }));\n\n    setPeople(peopleData);\n  }, []);\n\n  const getFilms = useCallback(async () => {\n    const { data } = await axios.get(`${SWAPI_BASE_URL}films`);\n\n    const filmsData = data.results.map((el) => ({\n      label: `Episode ${convertNumberToRoman(el.episode_id)}: ${el.title}`,\n      value: el.url,\n    }));\n\n    setFilms([{ value: 'all', label: 'All' }, ...filmsData]);\n  }, []);\n\n  const getSpecies = useCallback(async () => {\n    const urls = Array(TOTAL_SPECIES_PAGES)\n      .fill(null)\n      .map((_, index) => `${SWAPI_BASE_URL}species/?page=${index + 1}`);\n\n    const results = await axios.all(urls.map((url) => axios.get(url)));\n\n    const speciesData = results\n      .flatMap((el) => el.data.results)\n      .map((el) => ({\n        value: el.url,\n        label: el.name,\n      }));\n\n    setSpecies([{ value: 'all', label: 'All' }, ...speciesData]);\n  }, []);\n\n  useEffect(() => {\n    if (isEmpty(people)) {\n      getPeople();\n    }\n\n    if (isEmpty(films)) {\n      getFilms();\n    }\n\n    if (isEmpty(species)) {\n      getSpecies();\n    }\n  }, [films, getFilms, getPeople, getSpecies, people, species]);\n\n  return (\n    <DataContext.Provider value={{ people, species, films }}>\n      <DndProvider backend={HTML5Backend}>\n        <AppContainer>\n          <Switch>\n            <Route path=\"/person/:id\" component={CharacterPage} />\n            <Route exact path=\"/\" component={Main} />\n          </Switch>\n        </AppContainer>\n      </DndProvider>\n    </DataContext.Provider>\n  );\n};\n\nconst AppContainer = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'rc-slider/assets/index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}